// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/consuladapter"
)

type FakeClient struct {
	AgentStub        func() consuladapter.Agent
	agentMutex       sync.RWMutex
	agentArgsForCall []struct{}
	agentReturns struct {
		result1 consuladapter.Agent
	}
	SessionStub        func() consuladapter.ISession
	sessionMutex       sync.RWMutex
	sessionArgsForCall []struct{}
	sessionReturns struct {
		result1 consuladapter.ISession
	}
}

func (fake *FakeClient) Agent() consuladapter.Agent {
	fake.agentMutex.Lock()
	fake.agentArgsForCall = append(fake.agentArgsForCall, struct{}{})
	fake.agentMutex.Unlock()
	if fake.AgentStub != nil {
		return fake.AgentStub()
	} else {
		return fake.agentReturns.result1
	}
}

func (fake *FakeClient) AgentCallCount() int {
	fake.agentMutex.RLock()
	defer fake.agentMutex.RUnlock()
	return len(fake.agentArgsForCall)
}

func (fake *FakeClient) AgentReturns(result1 consuladapter.Agent) {
	fake.AgentStub = nil
	fake.agentReturns = struct {
		result1 consuladapter.Agent
	}{result1}
}

func (fake *FakeClient) Session() consuladapter.ISession {
	fake.sessionMutex.Lock()
	fake.sessionArgsForCall = append(fake.sessionArgsForCall, struct{}{})
	fake.sessionMutex.Unlock()
	if fake.SessionStub != nil {
		return fake.SessionStub()
	} else {
		return fake.sessionReturns.result1
	}
}

func (fake *FakeClient) SessionCallCount() int {
	fake.sessionMutex.RLock()
	defer fake.sessionMutex.RUnlock()
	return len(fake.sessionArgsForCall)
}

func (fake *FakeClient) SessionReturns(result1 consuladapter.ISession) {
	fake.SessionStub = nil
	fake.sessionReturns = struct {
		result1 consuladapter.ISession
	}{result1}
}

var _ consuladapter.Client = new(FakeClient)
